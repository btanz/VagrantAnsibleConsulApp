---
- hosts: all
  become: yes
  
  tasks:
    - name: Install Docker from the CentOS 7 repository.
      yum:
        name: docker
        state: latest

    # Start docker service
    - service:
        name: docker
        state: started
    
    - name: Add vagrant user to docker group.
      user:
        name: vagrant
        groups: dockerroot
        append: yes
      become: yes

    - name: Install EPEL repo.
      yum: 
        name: epel-release
        state: latest
      register: result
 
    - name: Install unzip
      yum: 
        name: unzip
        state: latest
      become: yes
      register: result

    # create a directory for consul if it doesn't exist
    - file:
        path: /usr/bin/consul
        state: directory
        mode: 0755

    - name: Download consul for the VM host
      get_url:
        url: https://releases.hashicorp.com/consul/0.8.4/consul_0.8.4_linux_amd64.zip
        dest: /usr/bin/consul

    # unarchive consul
    - unarchive:
        src: /usr/bin/consul/consul_0.8.4_linux_amd64.zip
        dest: /usr/bin/consul
        remote_src: True
     
    - name: Install pip
      yum: 
        name: python-pip
        state: latest
      become: yes
      register: result

    - name: Install the Docker-Python-SDK.
      pip: 
        name: docker-py
        state: latest
      become: yes
      register: result

    - name: Build docker image for Consul
      docker_image:
        name: consul
        tag: consul
        path: "/vagrant/provisioning/consul"
        state: build

    - name: Build docker image for db (PostgreSQL).
      docker_image:
        name: db
        tag: postgres
        path: "/vagrant/provisioning/db"
        state: build

    - name: Build docker image for www (Node.js).
      docker_image: 
        name: www
        tag: nodejs
        path: "/vagrant/provisioning/www"
        state: build
 
    - name: Run consul container in server mode (dev)
      docker: 
        image: consul:consul
        name: consul
        state: running

    - name: Run db-Container
      docker: 
        image: db:postgres
        name: db
        state: running
        env:
          POSTGRES_DB: app
          POSTGRES_USER: admin
        

    - name: Run www-Container
      docker:
        image: www:nodejs
        name: www
        state: running
        command: npm start 
        ports: "80:80"
        links: 
          - "db:postgres"
      
